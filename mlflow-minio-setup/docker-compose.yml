version: "3.3"
services:
  db:
    image: postgres
    container_name: mlflow_db
    expose:
      - "5432"
    networks:
      - backend
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DATABASE=mlflow
    volumes:
      - ./db_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "mlflow"]
      interval: 5s
      timeout: 5s
      retries: 3

  s3:
    image: minio/minio
    container_name: mlflow_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
    - frontend
    - backend
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_PORT: 9000
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    command: server --console-address ":9001" /data      
  

  tracking_server:
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    depends_on:
      - db
    ports:
      - "5001:5000"
    networks:
      - frontend
      - backend
    environment:
      - AWS_ACCESS_KEY_ID=RfkrEwT1vq6FONuuQwCL
      - AWS_SECRET_ACCESS_KEY=I2b3xeYLaocEx2wfVYzUYwooMLtL0YX5MOV1O9Je
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
      - MLFLOW_S3_IGNORE_TLS=true
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow:mlflow@db:5432/mlflow
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge